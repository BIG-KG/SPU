push 8
pop DX
push 13
pop CX


push 0
pop AX

    ^main_cikle
    push AX
    look

    call :find_y
    pop [910]

    call :find_x
    pop [911]

    push [910]
    push CX
    sub
    push [910]
    push CX
    sub
    mul

    push [911]
    push CX
    sub
    push [911]
    push CX
    sub
    mul


    add
    sqrt
    pop [909]
    push [909]

    push DX
    jmpm :incirc
    jmp  :nincirc

    ^incirc
        push 1
        pop [AX]
        jmp :continue

    ^nincirc
        push 0
        pop [AX]
        jmp :continue

    ^continue
    push AX
    push 1
    add
    pop AX

    push AX
    push 900
    jmpm :main_cikle

    draw
    end

^find_y
    push 0
    pop BX
    ^uuu
        push BX
        push 30
        add
        pop BX
        push BX
        push AX

        jmpl :find

        jmp :uuu

    ^find
        push BX
        push 30
        sub

        push 30
        div
        ret


^find_x
    push AX
    push [910]
    push 30
    mul
    sub
    ret
