push 100
pop [10]
push 100
pop [11]
push 0
pop [9]

push 3.1415
pop [1]
push 1.2
pop [0]
push 1
pop [3]
push 1
pop [4]

push 20
pop [5]
push 20
pop [6]

push 100
pop [7]
push 250
pop [8]
push -100
pop [26]


^main

    ^animation
        call :draw_frame
        push [26]
        push 10
        add
        pop [26]

        push [26]
        push 100
        jmpm :animation
    end



^draw_frame
    push [9]
    push [8]
    sub
    pop AX
    push AX
    push AX
    mul

    push [10]
    push [26]
    sub
    pop AX
    push AX
    push AX
    mul
    add

    push [11]
    push [27]
    sub
    pop AX
    push AX
    push AX
    mul
    add

    sqrt
    pop [2]

    call :calculate_screen

    draw

    ret

^calculate_screen

    push 0
    pop [23]


    ^while_i<scrXscrY


    push [5]
    push 2
    call :nacel

    push [23]
    push [5]
    call :ostat
    sub

    push [5]
    push 2
    div

    div

    push [1]
    push 4
    div
    mul
    sin
    pop [13]




    push [6]
    push 2
    call :nacel

    push [23]
    push [5]
    call :nacel
    sub

    push [6]
    push 2
    div

    div

    push [1]
    push 4
    div
    mul
    sin
    pop [14]
    call :calculate_ray

    push [23]
    push 3
    mul
    push 50
    add
    pop DX

    pop [DX+2]
    pop [DX+1]
    pop [DX]


    push [23]
    push 1
    add
    pop [23]

    push [23]
    push [5]
    push [6]
    mul

    jmpm :while_i<scrXscrY

    ret




^calculate_ray

    push 0
    pop [18]
    push 0
    pop [19]
    push 0
    pop [20]



    ^while_z

        push [0]
        push [20]
        add
        pop [20]

        push [0]
        push [13]
        mul
        push [18]
        add
        pop [18]

        push [0]
        push [14]
        mul
        push [19]
        add
        pop [19]


        push [8]
        push [20]
        sub
        pop AX
        push AX
        push AX
        mul

        push [18]
        push [26]
        sub
        pop AX
        push AX
        push AX
        mul

        push [19]
        push [27]
        sub
        pop AX
        push AX
        push AX
        mul

        add
        add
        sqrt
        pop DX
        push DX


        push [7]
        jmpm :toch


        push [20]
        push [8]
        jmpm :while_z


    push 0
    push 0
    push 0


    ret

    ^toch

        push 10000

        call :shirsh
        pop CX
        pop BX
        pop AX

        push AX
        push AX
        mul
        add
        pop AX

        push BX
        push BX
        mul
        pop BX

        push CX
        push CX
        mul
        pop CX

        push AX
        sqrt
        call :nm_255



        push BX
        sqrt
        call :nm_255



        push CX
        sqrt
        call :nm_255


        ret





^nacel
    pop CX
    pop AX
    push 0
    pop BX



    ^uuu


        push BX
        push CX
        add
        pop BX
        push BX
        push AX

        jmpl :find

        jmp :uuu

    ^find
        push BX
        push CX
        sub

        push CX
        div
        ret

^ostat
    call :nacel
    push CX
    mul
    pop DX

    push AX
    push DX
    sub

    ret


^nm_255

    pop DX
    push DX
    push 255


    jmpl :less_255



    push DX
    ret

    ^less_255
        push 255
        ret

^shirsh
    push [18]
    push [10]
    sub
    pop AX
    push AX
    push AX
    mul

    push [19]
    push [11]
    sub
    pop AX
    push AX
    push AX
    mul

    push [20]
    push [9]
    sub
    pop AX
    push AX
    push AX
    mul

    add
    add
    sqrt
    pop AX
    push AX


    push [7]
    push [2]
    call :angl
    pop [21]
    push [1]
    push [21]
    sub
    pop [21]

    push [21]
    cos
    call :nl_0
    push 255
    mul
    push [3]
    mul

    pop AX
    push AX
    push AX
    push AX

    ret



^angl
    pop CX
    pop BX
    pop AX

    push AX
    push AX
    mul
    push BX
    push BX
    mul
    add
    push CX
    push CX
    mul
    sub

    push 2
    push AX
    mul
    push BX
    mul

    div
    acos
    ret

^nl_0
    pop AX
    push AX
    push 0
    jmpm :less_0

    push AX
    ret

    ^less_0
        push 0
        ret

~end_for_shirsh
